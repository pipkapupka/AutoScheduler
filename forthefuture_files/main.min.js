let overlay = $("div.overlay")

$(function () {
    $(".phone").mask("+7 (999) 999-9999")
})

let tooltip = () => {
    let tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
}
tooltip()

$(".modalButton").each((index, value) => {
    $(value).animatedModal({ color: "#fff" })
})

switch (view) {
    case "timetable":
        $("button.selectSetting").on("click", function () {
            let type = $(this).attr("data-type")
            $("button.selectSetting").removeClass("active")
            $(this).addClass("active")

            if ($("div#" + type).is(":hidden")) {
                $("div.setting").hide()
                $("div#" + type)
                    .hide()
                    .fadeIn(300)
            }
        })

        $("button#getTimetable").on("click", function (e) {
            e.preventDefault()
            let type = $(this).attr("data-type")
            let date = $(this).attr("data-date")

            switch (date) {
                case "today":
                    var newDate = currentDay()
                    $("input#" + type + "Date").val(newDate)
                    break

                case "sunday":
                    var newDate = addOneDay(currentDay())
                    $("input#" + type + "Date").val(newDate)
                    break
            }

            let inputDate = $("input#" + type + "Date").val()
            let item = $("select#" + type + "Select").val()

            if (item !== null) {
                $(overlay).hide().fadeIn(300)
                $.ajax({
                    url: "/timetable/get",
                    type: "GET",
                    data: {
                        type: type,
                        date: date,
                        item: item,
                        inputDate: inputDate,
                    },
                    success: (res) => {
                        $("div#content").html(res)
                        $(overlay).show().fadeOut(300)
                    },
                })
                $("button#getTimetable").removeClass("active")
                $(this).addClass("active")
            } else {
                errorBlock("Заполните все поля формы...")
            }
        })

        break

    case "reference":
        // Показать поле Email
        function toggleEmail(el, type) {
            if ($(el).prop("checked")) {
                $("#email" + type).slideDown(150)
            } else {
                $("#email" + type).slideUp(150)
            }
        }

        // Изменить тип справки
        function changeTypeReference(el) {
            let type = $(el).val()

            $("div.type").slideUp(300)
            $("div#type-" + type).slideDown(300)
        }
        break

    case "profile":
        $("input#fileAvatar").on("change", function (e) {
            e.preventDefault()

            let info = new FormData()
            info.append("fileAvatar", $(this)[0].files[0])

            $.ajax({
                url: "/profile/setAvatar",
                type: "post",
                processData: false,
                contentType: false,
                data: info,
                headers: {
                    "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content"),
                },
                success: (res) => {
                    if (res.accept == "accept") window.location.href = "/profile"
                },
                error: (err) => {
                    let errors = errorAjax(err)
                    errorBlock(errors)
                },
            })
        })

        break

    case "recover":
        $("#numPassportInput").mask("999999")
        break

    case "addPortfolio":
        $("select#categoryInput").on("change", function () {
            $.ajax({
                url: "/profile/portfolio/getCategory",
                type: "GET",
                data: { id: $(this).val() },
                success: (res) => {
                    $("select#subCategoryInput").html(res)
                },
            })
        })

        $("input#addLinkPortfolio").on("click", function () {
            if ($(this).is(":checked")) {
                $("div#filePortfolioBlock").slideUp(200)
                $("div#linkPortfolioBlock").slideDown(300)
            } else {
                $("div#filePortfolioBlock").slideDown(300)
                $("div#linkPortfolioBlock").slideUp(200)
            }
        })
        break
}

let errorAjax = (res) => {
    let errorsHtml = ""
    $.each(res.responseJSON["errors"], (index, value) => {
        errorsHtml += value + "<br>"
    })
    return errorsHtml
}

let chosen = (el) => {
    if ($(el).hasClass("active")) {
        $.removeCookie("chosenType")
        $.removeCookie("chosenName")
        $(el).removeClass("active").find("svg").attr("data-prefix", "fal")
    } else {
        let type = $(el).attr("data-type")
        let item = $(el).attr("data-name")
        $.cookie("chosenType", type, { expires: 120 })
        $.cookie("chosenName", item, { expires: 120 })
        $(el).addClass("active").find("svg").attr("data-prefix", "fas")
    }
}

let errorBlock = (text) => {
    let errorBlock = new bootstrap.Toast(document.getElementById("errorBlock"))
    $("div#errorBlock").find("div.toast-body").text(text)
    errorBlock.show()
}

let currentDay = () => {
    let result = new Date()
    let currentDay = (result.getDate() < 10 ? "0" : "") + result.getDate()
    let currentMonth = (result.getMonth() + 1 < 10 ? "0" : "") + (result.getMonth() + 1)
    result = result.getFullYear() + "-" + currentMonth + "-" + currentDay
    return result
}

let addOneDay = (date) => {
    let result = new Date(date)
    result.setDate(result.getDate() + 1)
    let currentDay = (result.getDate() < 10 ? "0" : "") + result.getDate()
    let currentMonth = (result.getMonth() + 1 < 10 ? "0" : "") + (result.getMonth() + 1)
    result = result.getFullYear() + "-" + currentMonth + "-" + currentDay
    return result
}

let removeOneDay = (date) => {
    let result = new Date(date)
    result.setDate(result.getDate() - 1)
    let currentDay = (result.getDate() < 10 ? "0" : "") + result.getDate()
    let currentMonth = (result.getMonth() + 1 < 10 ? "0" : "") + (result.getMonth() + 1)
    result = result.getFullYear() + "-" + currentMonth + "-" + currentDay
    return result
}

let editDateTimetable = (date, type) => {
    let inputDate = $("input#" + type + "Date").val()
    let item = $("select#" + type + "Select").val()

    if (item !== null) {
        $(overlay).hide().fadeIn(300)
        $.ajax({
            url: "/timetable/get",
            type: "GET",
            data: { type: type, date: date, item: item, inputDate: inputDate },
            success: (res) => {
                $("div#content").html(res)
                $(overlay).show().fadeOut(300)
            },
        })
        $("button#getTimetable").removeClass("active")
        $(this).addClass("active")
    } else {
        errorBlock("Заполните все поля формы...")
    }
}

let editDate = (type, side) => {
    let date = $("input#" + type + "Date").val()
    let min = $("input#" + type + "Date").attr("min")
    let max = $("input#" + type + "Date").attr("max")
    if (side == "left") {
        date = removeOneDay(date)
    } else {
        date = addOneDay(date)
    }
    if (date >= min && date <= max) {
        $("input#" + type + "Date").val(date)
        $('button.dateButton#getTimetable[data-type="' + type + '"]').attr("data-date", date)
        editDateTimetable(date, type)
    } else {
        errorBlock("Вы пытаетесь сойти с пути истинного...")
    }
}

let ajaxForm = (t, e) => {
    e.preventDefault()

    let form = $(t).attr("id")
    $(overlay).fadeIn(200)

    $.ajax({
        url: $(t).attr("action"),
        type: $(t).attr("method"),
        data: new FormData($(t).get(0)),
        headers: {
            "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content"),
        },
        processData: false,
        contentType: false,
        success: (res) => {
            $("form#" + form + " input, form#" + form + " textarea").removeClass("is-invalid")

            if (res.global == "success") {
                $("div.successMessage").text(res.message).hide().slideDown(300)
                $(t).find("input").val("")
                $(t).find("textarea").val("")
                $(overlay).show().fadeOut(300)
                setTimeout(() => {
                    $("div.successMessage").slideUp(300)
                }, 5000)
            }

            if (res.success == "recover") {
                $("div.successMessage").text(res.text).hide().slideDown(300)
                $(t).find("input").val("")
            }
            if (res.success == "reference") {
                $("div.successMessage").text("Ваша заявка успешно отправлена! Справку можно забрать через 2 дня в колледже.").hide().slideDown(300)
                $(t).find("input").val("")
                $(overlay).show().fadeOut(300)
                setTimeout(() => {
                    $("div.successMessage").slideUp(300)
                }, 5000)
            }

            if (res.success == "resume") window.location.href = res.link
            if (res.success == "portfolio") window.location.href = res.link
            if (res.success == "auth") window.location.href = res.link
        },
        error: (err) => {
            $("form#" + form + " input, form#" + form + " textarea, form#" + form + " select").removeClass("is-invalid")
            if (err.responseJSON.global == "fails") {
                $(t).find("input, textarea").val("")
                $(t).find("div.errorMessage").text(err.responseJSON.text).slideDown(300)
                setTimeout(() => {
                    $(t).find("div.errorMessage").slideUp(300)
                }, 5000)
            }
            $.each(err.responseJSON.errors, (index, value) => {
                $("form#" + form + " input#" + index + "Input, form#" + form + " textarea#" + index + "Input, form#" + form + " select#" + index + "Input").addClass("is-invalid")
                $("form#" + form + " div#" + index + "Error").text(value)
            })
            $(overlay).fadeOut(300)
        },
    })
}

let ajaxFormHtml = (t, e, type) => {
    e.preventDefault()

    $(overlay).fadeIn(300)

    $.ajax({
        url: $(t).attr("action"),
        type: $(t).attr("method"),
        data: $(t).serialize(),
        success: (res) => {
            $("div#" + type + "View").html(res)
            $(overlay).fadeOut(300)
            tooltip()
        },
        error: (err) => {
            let errors = errorAjax(err)
            if (!errors) errors = "Попробуйте позже!"
            $("div#" + type + "View").html('<div class="errorMessage text-center">Ошибка получения данных!<br>' + errors + "</div>")
            $(overlay).fadeOut(300)
        },
    })
}
